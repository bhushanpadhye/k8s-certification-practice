# Parameters to configure cluster

NUM_CONTROL_PLANES=1
NUM_WORKER_NODES=2

# Cluster user for password based ssh
#CLUSTER_USER = "student"
#CLUSTER_USER_PWD = "Demo@1234"

# Network configuration
IP_SERIES = "192.168.56."
MASTER_IP_START = 1
NODE_IP_START = 11

OSVERSION="7"
DOCKER_CE_VERSION="20.10.9"

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

    # Base Image
    config.vm.box = "centos/#{OSVERSION}"
    

    # Disable automatic box update checking. If you disable this, then
    # boxes will only be checked for updates when the user runs
    # `vagrant box outdated`. This is not recommended.
    config.vm.box_check_update = false

    # Provision Control Plane Nodes
    (1..NUM_CONTROL_PLANES).each do |i|
        config.vm.define "control-plane-#{i}" do |node|

             # Name shown in the GUI
            node.vm.provider "virtualbox" do |vb|
                vb.name = "control-plane-#{i}"
                vb.memory = 2048
                vb.cpus = 2
            end
            node.vm.hostname = "control-plane-#{i}"
            node.vm.network :private_network, ip: IP_SERIES + "#{MASTER_IP_START + i}"
            node.vm.network "forwarded_port", guest: 22, host: "#{2710 + i}"

            node.vm.provision "setup-host", type: "shell", :path => "scripts/centos/01-setup-host.sh" do |s|
                s.args = ["eth0", "#{IP_SERIES}","#{NUM_CONTROL_PLANES}","#{NUM_WORKER_NODES}","#{MASTER_IP_START}","#{NODE_IP_START}"]
            end

            node.vm.provision "configure-iptables", type: "shell", :path => "scripts/centos/02-configure-iptables.sh" 
            node.vm.provision "install-container-runtime", type: "shell", :path => "scripts/centos/03-install-container-runtime.sh" do |s|
                s.args = ["#{DOCKER_CE_VERSION}"]
            end
            node.vm.provision "install-kube-components", type: "shell", :path => "scripts/centos/04-install-kube-components.sh" 
            
        end
    end

    # Provision Control Plane Nodes
    (1..NUM_WORKER_NODES).each do |i|
        config.vm.define "worker-node-#{i}" do |node|

             # Name shown in the GUI
            node.vm.provider "virtualbox" do |vb|
                vb.name = "worker-node-#{i}"
                vb.memory = 2048
                vb.cpus = 2
            end
            node.vm.hostname = "worker-node-#{i}"
            node.vm.network :private_network, ip: IP_SERIES + "#{NODE_IP_START + i}"
            node.vm.network "forwarded_port", guest: 22, host: "#{2720 + i}"

            node.vm.provision "setup-host", type: "shell", :path => "scripts/centos/01-setup-host.sh" do |s|
                s.args = ["eth0", "#{IP_SERIES}","#{NUM_CONTROL_PLANES}","#{NUM_WORKER_NODES}","#{MASTER_IP_START}","#{NODE_IP_START}"]
            end

            node.vm.provision "configure-iptables", type: "shell", :path => "scripts/centos/02-configure-iptables.sh" 
            node.vm.provision "install-container-runtime", type: "shell", :path => "scripts/centos/03-install-container-runtime.sh" do |s|
                s.args = ["#{DOCKER_CE_VERSION}"]
            end
            node.vm.provision "install-kube-components", type: "shell", :path => "scripts/centos/04-install-kube-components.sh" 
            
        end
    end

end